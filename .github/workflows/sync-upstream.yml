
name: Sync upstream

on:
  schedule:
    - cron: '0 2 * * *'   # daily at 02:00 UTC
  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: develop
          fetch-depth: 0
          persist-credentials: true

      - name: Add upstream and fetch
        run: |
          git remote add upstream https://github.com/nautechsystems/nautilus_trader.git || true
          # fetch all branches and tags from upstream and origin
          git fetch origin --prune
          git fetch upstream --prune --tags

      - name: Create sync branch from upstream/develop
        run: |
          # Configure git
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          # Force-create/reset local develop to origin/develop
          git checkout -B develop origin/develop
          
          # Update develop to exactly match upstream/develop
          git fetch upstream develop --prune
          git reset --hard upstream/develop
          
          # Push updated develop to origin (use force-with-lease to avoid clobbering unseen changes)
          git push --force-with-lease origin develop || {
            echo "Push failed, retrying in 2s..."
            sleep 2
            git push --force-with-lease origin develop
          }
          
          # Create a sync branch based on upstream/develop
          SYNC_BRANCH="sync/upstream-${{ github.run_id }}"
          git checkout -B "$SYNC_BRANCH" origin/develop
          
          # Rebase the sync branch onto develop
          echo "Rebasing $SYNC_BRANCH onto develop"
          if ! git rebase develop; then
            echo "Rebase failed â€” aborting and leaving branch in original state"
            git rebase --abort || true
            exit 1
          fi
          
          # Push rebased sync branch to origin
          git push --force-with-lease origin "$SYNC_BRANCH" || {
            echo "Push failed, retrying in 2s..."
            sleep 2
            git push --force-with-lease origin "$SYNC_BRANCH"
          }
          
          echo "Sync branch $SYNC_BRANCH created and pushed."

      - name: Check if sync branch is ahead of develop
        id: check_ahead
        run: |
          git fetch origin develop:refs/remotes/origin/develop || true
          SYNC_BRANCH=sync/upstream-${{ github.run_id }}
          # Count commits sync branch is ahead of develop
          AHEAD=$(git rev-list --left-right --count origin/develop...$SYNC_BRANCH | awk '{print $2}')
          echo "ahead=$AHEAD" >> $GITHUB_OUTPUT

      - name: Validate sync
        run: |
          # Simple validation - check that we're on the sync branch
          echo "Current branch: $(git branch --show-current)"
          echo "Sync completed successfully"

      - name: Create PR
        if: steps.check_ahead.outputs.ahead != '0'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: develop
          branch: sync/upstream-${{ github.run_id }}
          title: "chore: sync from upstream nautechsystems/nautilus_trader @ ${{ github.run_id }}"
          body: |
            Automated sync from upstream nautechsystems/nautilus_trader.
